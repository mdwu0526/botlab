/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package mbot_lcm_msgs;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class omni_encoder_t implements lcm.lcm.LCMEncodable
{
    public long utime;
    public long aticks;
    public long bticks;
    public long cticks;
    public long a_delta;
    public long b_delta;
    public long c_delta;
 
    public omni_encoder_t()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xe75f01352d4097d4L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(mbot_lcm_msgs.omni_encoder_t.class))
            return 0L;
 
        classes.add(mbot_lcm_msgs.omni_encoder_t.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeLong(this.utime); 
 
        outs.writeLong(this.aticks); 
 
        outs.writeLong(this.bticks); 
 
        outs.writeLong(this.cticks); 
 
        outs.writeLong(this.a_delta); 
 
        outs.writeLong(this.b_delta); 
 
        outs.writeLong(this.c_delta); 
 
    }
 
    public omni_encoder_t(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public omni_encoder_t(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static mbot_lcm_msgs.omni_encoder_t _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        mbot_lcm_msgs.omni_encoder_t o = new mbot_lcm_msgs.omni_encoder_t();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.utime = ins.readLong();
 
        this.aticks = ins.readLong();
 
        this.bticks = ins.readLong();
 
        this.cticks = ins.readLong();
 
        this.a_delta = ins.readLong();
 
        this.b_delta = ins.readLong();
 
        this.c_delta = ins.readLong();
 
    }
 
    public mbot_lcm_msgs.omni_encoder_t copy()
    {
        mbot_lcm_msgs.omni_encoder_t outobj = new mbot_lcm_msgs.omni_encoder_t();
        outobj.utime = this.utime;
 
        outobj.aticks = this.aticks;
 
        outobj.bticks = this.bticks;
 
        outobj.cticks = this.cticks;
 
        outobj.a_delta = this.a_delta;
 
        outobj.b_delta = this.b_delta;
 
        outobj.c_delta = this.c_delta;
 
        return outobj;
    }
 
}

